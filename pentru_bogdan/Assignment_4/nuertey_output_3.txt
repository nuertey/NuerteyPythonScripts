(py37-venv) nuertey@nuertey-PC-LL850RSB:/media/nuertey/c24545b9-e61b-481b-8264-db16fd9b4ffc/home/rena/postgrestest/pentru_bogdan/Assignment_4$ python assignment_4.py 
airlines_graph_data.shape:
(100, 16)

airlines_graph_data.head():
   year  month  day  dep_time  sched_dep_time  dep_delay  arr_time  sched_arr_time  arr_delay carrier  flight tailnum origin dest  air_time  distance
0  2013      2   26    1807.0            1630       97.0    1956.0            1837       79.0      EV    4411  N13566    EWR  MEM     144.0       946
1  2013      8   17    1459.0            1445       14.0    1801.0            1747       14.0      B6    1171  N661JB    LGA  FLL     147.0      1076
2  2013      2   13    1812.0            1815       -3.0    2055.0            2125      -30.0      AS       7  N403AS    EWR  SEA     315.0      2402
3  2013      4   11    2122.0            2115        7.0    2339.0            2353      -14.0      B6      97  N656JB    JFK  DEN     221.0      1626
4  2013      8    5    1832.0            1835       -3.0    2145.0            2155      -10.0      AA     269  N3EYAA    JFK  SEA     358.0      2422

airlines_graph_data.info():
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 100 entries, 0 to 99
Data columns (total 16 columns):
 #   Column          Non-Null Count  Dtype  
---  ------          --------------  -----  
 0   year            100 non-null    int64  
 1   month           100 non-null    int64  
 2   day             100 non-null    int64  
 3   dep_time        99 non-null     float64
 4   sched_dep_time  100 non-null    int64  
 5   dep_delay       99 non-null     float64
 6   arr_time        99 non-null     float64
 7   sched_arr_time  100 non-null    int64  
 8   arr_delay       99 non-null     float64
 9   carrier         100 non-null    object 
 10  flight          100 non-null    int64  
 11  tailnum         100 non-null    object 
 12  origin          100 non-null    object 
 13  dest            100 non-null    object 
 14  air_time        99 non-null     float64
 15  distance        100 non-null    int64  
dtypes: float64(5), int64(7), object(4)
memory usage: 12.6+ KB
None

Complex Networks Python Package Version:
2.6.2




assignment_4.py:48: FutureWarning: The default value of regex will change from True to False in a future version.
  airlines_graph_data['std'] = airlines_graph_data.sched_dep_time.astype(str).str.replace('(\d{2}$)', '') + ':' + airlines_graph_data.sched_dep_time.astype(str).str.extract('(\d{2}$)', expand=False) + ':00'
assignment_4.py:51: FutureWarning: The default value of regex will change from True to False in a future version.
  airlines_graph_data['sta'] = airlines_graph_data.sched_arr_time.astype(str).str.replace('(\d{2}$)', '') + ':' + airlines_graph_data.sched_arr_time.astype(str).str.extract('(\d{2}$)', expand=False) + ':00'
assignment_4.py:54: FutureWarning: The default value of regex will change from True to False in a future version.
  airlines_graph_data['atd'] = airlines_graph_data.dep_time.fillna(0).astype(np.int64).astype(str).str.replace('(\d{2}$)', '') + ':' + airlines_graph_data.dep_time.fillna(0).astype(np.int64).astype(str).str.extract('(\d{2}$)', expand=False) + ':00'
assignment_4.py:56: FutureWarning: The default value of regex will change from True to False in a future version.
  airlines_graph_data['ata'] = airlines_graph_data.arr_time.fillna(0).astype(np.int64).astype(str).str.replace('(\d{2}$)', '') + ':' + airlines_graph_data.arr_time.fillna(0).astype(np.int64).astype(str).str.extract('(\d{2}$)', expand=False) + ':00'



edgelist_graph_dataframe.nodes():
['EWR', 'MEM', 'LGA', 'FLL', 'SEA', 'JFK', 'DEN', 'ORD', 'MIA', 'PBI', 'MCO', 'CMH', 'MSP', 'IAD', 'CLT', 'TPA', 'DCA', 'SJU', 'ATL', 'BHM', 'SRQ', 'MSY', 'DTW', 'LAX', 'JAX', 'RDU', 'MDW', 'DFW', 'IAH', 'SFO', 'STL', 'CVG', 'IND', 'RSW', 'BOS', 'CLE']

edgelist_graph_dataframe.edges():
[('EWR', 'MEM'), ('EWR', 'SEA'), ('EWR', 'MIA'), ('EWR', 'ORD'), ('EWR', 'MSP'), ('EWR', 'TPA'), ('EWR', 'MSY'), ('EWR', 'DFW'), ('EWR', 'IAH'), ('EWR', 'SFO'), ('EWR', 'CVG'), ('EWR', 'IND'), ('EWR', 'RDU'), ('EWR', 'IAD'), ('EWR', 'RSW'), ('EWR', 'BOS'), ('EWR', 'PBI'), ('EWR', 'LAX'), ('EWR', 'MCO'), ('EWR', 'SJU'), ('LGA', 'FLL'), ('LGA', 'ORD'), ('LGA', 'PBI'), ('LGA', 'CMH'), ('LGA', 'IAD'), ('LGA', 'CLT'), ('LGA', 'MIA'), ('LGA', 'DCA'), ('LGA', 'BHM'), ('LGA', 'RDU'), ('LGA', 'ATL'), ('LGA', 'TPA'), ('LGA', 'MDW'), ('LGA', 'DEN'), ('LGA', 'MSP'), ('LGA', 'DTW'), ('LGA', 'STL'), ('LGA', 'MCO'), ('LGA', 'CVG'), ('LGA', 'IAH'), ('FLL', 'JFK'), ('SEA', 'JFK'), ('JFK', 'DEN'), ('JFK', 'MCO'), ('JFK', 'TPA'), ('JFK', 'SJU'), ('JFK', 'ATL'), ('JFK', 'SRQ'), ('JFK', 'DCA'), ('JFK', 'DTW'), ('JFK', 'LAX'), ('JFK', 'JAX'), ('JFK', 'CLT'), ('JFK', 'PBI'), ('JFK', 'CLE'), ('JFK', 'IAD'), ('JFK', 'BOS')]

pos:
{'EWR': array([0.27776582, 0.30247602]), 'MEM': array([0.83268129, 0.31577068]), 'LGA': array([-0.36139263, -0.01186073]), 'FLL': array([-0.15386195, -0.52494519]), 'SEA': array([ 0.36660005, -0.11379786]), 'JFK': array([ 0.07312854, -0.43245304]), 'DEN': array([-0.26423757, -0.43340453]), 'ORD': array([-0.27590706,  0.30995373]), 'MIA': array([-0.2727089 ,  0.46220138]), 'PBI': array([ 0.00274223, -0.13623571]), 'MCO': array([0.06417727, 0.01406792]), 'CMH': array([-0.80860416,  0.33698868]), 'MSP': array([-0.14924371,  0.52596949]), 'IAD': array([-0.0668329 , -0.01699456]), 'CLT': array([-0.32055137, -0.29559164]), 'TPA': array([ 0.1257508 , -0.09440631]), 'DCA': array([-0.4757384 , -0.36555513]), 'SJU': array([ 0.55024949, -0.18469757]), 'ATL': array([-0.31397717, -0.59382237]), 'BHM': array([-0.9282356 , -0.02836176]), 'SRQ': array([ 0.03747155, -1.        ]), 'MSY': array([0.5933161 , 0.75669593]), 'DTW': array([-0.43368825, -0.5080235 ]), 'LAX': array([ 0.42560442, -0.26138744]), 'JAX': array([ 0.44389146, -0.85021839]), 'RDU': array([-0.00269787,  0.27309558]), 'MDW': array([-0.89622146,  0.15548624]), 'DFW': array([0.25884054, 0.86730217]), 'IAH': array([-0.14081613,  0.32586408]), 'SFO': array([0.7267153 , 0.65639142]), 'STL': array([-0.88742559, -0.22894536]), 'CVG': array([-0.0223083 ,  0.45263906]), 'IND': array([0.79680936, 0.49901051]), 'RSW': array([0.44678981, 0.84272533]), 'BOS': array([ 0.49468843, -0.04664142]), 'CLE': array([ 0.25722655, -0.96929571])}
